pool:
  vmImage: 'ubuntu-latest'

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - doc/**/*
      - .github/*

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - /doc/**/*

variables:
  - group: 'External Resources'
  - name: v
    value: '4.15.0'
  - name: av
    value: '4.0.0'
  - name: pv
    value: '4.15.0'

steps:

- script: echo "##vso[build.updatebuildnumber]$(pv)"

- task: DotNetCoreCLI@2
  displayName: 'unit tests'
  inputs:
    command: test
    projects: src/Config.Net.Tests
    arguments: '-c release  /p:Version=$(pv) /p:FileVersion=$(v) /p:AssemblyVersion=$(av) /p:PackageLicenseUrl="https://github.com/aloneguid/config/blob/master/LICENSE" /p:Authors="Ivan Gavryliuk (@aloneguid)" /p:PackageIconUrl="http://i.isolineltd.com/nuget/config.net.png"'

- task: DotNetCoreCLI@2
  displayName: 'build all'
  inputs:
    projects: src/Config.Net.sln
    arguments: '-c release  /p:Version=$(pv) /p:FileVersion=$(v) /p:AssemblyVersion=$(av) /p:PackageLicenseUrl="https://github.com/aloneguid/config/blob/master/LICENSE" /p:Authors="Ivan Gavryliuk (@aloneguid)" /p:PackageIconUrl="http://i.isolineltd.com/nuget/config.net.png"'



- task: CopyFiles@2
  displayName: 'copy generated nugets'
  inputs:
    SourceFolder: src
    Contents: '**/*.nupkg'
    TargetFolder: ' $(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true

- task: NuGetCommand@2
  displayName: 'publish to nuget.org'
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  inputs:
    command: push
    packagesToPush: '$(build.artifactstagingdirectory)/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'nuget.org (aloneguid)'

- task: GitHubRelease@1
  displayName: 'create github release'
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  inputs:
    gitHubConnection: 'aloneguid'
    repositoryName: 'aloneguid/config'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'