pool:
  vmImage: 'ubuntu-16.04'

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - /doc/**/*

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - /doc/**/*

variables:
  - group: 'External Resources'

steps:
- task: petersendev.dotnet-global-tool-installer.DotnetGlobalToolInstaller.DotnetGlobalToolInstaller@0
  displayName: 'install housework'
  inputs:
    name: housework

- script: 'housework author src/*.csproj -s build.ini -r -v'
  displayName: 'author csproj'

- script: 'housework setbuildnumber %Version% -s build.ini -v'
  displayName: 'set build number'

- script: 'housework pushvars Version -s build.ini -v'
  displayName: 'push variables'

- task: DotNetCoreCLI@2
  displayName: 'build all'
  inputs:
    projects: src/Config.Net.sln
    arguments: '-c release'

- task: DotNetCoreCLI@2
  displayName: 'unit tests'
  inputs:
    command: test
    projects: src/Config.Net.Tests
    arguments: '-c release'

- task: CopyFiles@2
  displayName: 'copy generated nugets'
  inputs:
    SourceFolder: src
    Contents: '**/*.nupkg'
    TargetFolder: ' $(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true
    flattenFolders: true

- task: NuGetCommand@2
  displayName: 'publish to nuget.org'
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  inputs:
    command: push
    packagesToPush: '$(build.artifactstagingdirectory)/*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'nuget.org (aloneguid)'

- task: GitHubRelease@1
  displayName: 'create github release'
  condition: "eq(variables['Build.SourceBranch'], 'refs/heads/master')"
  inputs:
    gitHubConnection: 'aloneguid'
    repositoryName: 'aloneguid/config'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(Build.BuildNumber)'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'